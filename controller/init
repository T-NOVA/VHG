#!/usr/bin/env python


import subprocess
import json
import paramiko
import sys
import yaml

def _do(ssh, command):
    stdin, stdout, stderr = ssh.exec_command(command)
    print stdout.read()
    sys.stderr.write(stderr.read())

with open("data.json") as f:
    data = json.loads(f.read())

ssh = paramiko.SSHClient()
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
ips_json={"ips":data}
yml = yaml.safe_dump(ips_json, allow_unicode=True)
print yml
masterIp = data["Controller"]

for (name, ips) in data.items():
    print name, " ", ips , " connect to " , ips["management"]
    ssh.connect(ips["management"], username="root")
    _do(ssh, 'service salt-minion stop')
    _do(ssh, 'wget -O - https://repo.saltstack.com/apt/debian/8/amd64/latest/SALTSTACK-GPG-KEY.pub | apt-key add -')
    _do(ssh, 'echo "deb http://repo.saltstack.com/apt/debian/8/amd64/latest jessie main" >> /etc/apt/sources.list')
    _do(ssh, 'apt-get update')
    _do(ssh, 'apt-get install salt-minion --yes')
    _do(ssh, 'pip install docker-py --upgrade')
    _do(ssh, 'echo "%s" > /etc/salt/minion_id' % name)
    # for everbody
    _do(ssh, "echo %s salt >> /etc/hosts" % masterIp)
    _do(ssh, 'echo "roles:" > /etc/salt/grains')
    if (name == "Controller"):
        _do(ssh, 'apt-get install salt-master --yes')
        _do(ssh, 'echo "fileserver_backend:" >> /etc/salt/master')
        _do(ssh, 'echo "  - roots" >> /etc/salt/master')
        _do(ssh, 'echo "  - minion" >> /etc/salt/master')
        _do(ssh, 'echo "  - git" >> /etc/salt/master')
        _do(ssh, 'echo "" >> /etc/salt/master')
        _do(ssh, 'echo "file_recv: True" >> /etc/salt/master')
        _do(ssh, 'echo "auto_accept: True" >> /etc/salt/master')
        _do(ssh, 'echo "open_mode: True" >> /etc/salt/master')
        _do(ssh, 'service salt-master restart')
        _do(ssh, 'mkdir -p /srv/pillar/')
        _do(ssh, 'echo "mine_functions:" > /srv/pillar/swift.sls')
        _do(ssh, 'echo "  network.ip_addrs: [eth0]"  >> /srv/pillar/swift.sls')
        _do(ssh, 'echo "'+yml+'"  >> /srv/pillar/ips.sls')
        _do(ssh,'echo "base:" > /srv/pillar/top.sls')
        _do(ssh,'echo "  \'*\':" >> /srv/pillar/top.sls')
        _do(ssh,'echo "    - swift" >> /srv/pillar/top.sls')
        _do(ssh,'echo "    - ips" >> /srv/pillar/top.sls')
        print "Finish Controller"
    elif (name == "VHG"):
        _do(ssh, 'echo "  - core" >> /etc/salt/grains')
        _do(ssh, 'echo "  - vhg" >> /etc/salt/grains')
    elif (name == "CDN-LB"):
        _do(ssh, 'echo "  - swift_proxy" >> /etc/salt/grains')
        _do(ssh, 'echo "  - core" >> /etc/salt/grains')
        _do(ssh, 'echo "  - worker" >> /etc/salt/grains')
        _do(ssh, 'echo "  - broker" >> /etc/salt/grains')
        _do(ssh, 'echo "  - frontend" >> /etc/salt/grains')
    elif (name == "CDN-1"):
        _do(ssh, 'echo "  - core" >> /etc/salt/grains')
        _do(ssh, 'echo "  - worker" >> /etc/salt/grains')
        _do(ssh, 'echo "  - swift_object" >> /etc/salt/grains')
    elif (name == "CDN-2"):
        _do(ssh, 'echo "  - core" >> /etc/salt/grains')
        _do(ssh, 'echo "  - woker" >> /etc/salt/grains')
        _do(ssh, 'echo "  - swift_object" >> /etc/salt/grains')
    _do(ssh, "service salt-minion restart")

#ssh.connect("127.0.0.1", username="root")
#_do(ssh, 'salt-key -d VHG --yes')

print "Finish complete"
